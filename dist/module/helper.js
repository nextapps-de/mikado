import Mikado from"./mikado.js";{function c(c,d,e,a,b,f){if(c[f]=a,c[b]=e,d){const a=d[b];d[b]=d[f],d[f]=a}}Mikado.prototype.move=function(a,b){let c;return"number"==typeof a?(c=a,a=this.dom[c]):c=this.index(a),0>b&&(b=this.length+b-1),c!==b&&this.shift(a,b-c),this},Mikado.prototype.shift=function(d,e,f){if(!e)return this;let g;"number"==typeof d?(g=d,d=this.dom[d]):g=this.index(d);const h=0>e;if(h&&g||!h&&g<this.length-1){const a=h?Math.max(g+e,0):Math.min(g+e,this.length-1),i=this.dom[a],b=h&&1<g-a||!h&&1<a-g;if(!b&&this.reuse&&(this.store||this.loose)){const b=this.store?this.store[g]:d._data;this.update(d,this.store?this.store[a]:i._data,f,a),this.update(i,b,f,g)}else this.root.insertBefore(d,h?i:this.dom[a+1]||null);if(b){const b=this.dom[g],c=this.store&&this.store[g];let d;if(h)for(let b=g;b>a;b--)d=this.dom[b]=this.dom[b-1],this.store&&(this.store[b]=this.store[b-1]);else for(let b=g;b<a;b++)d=this.dom[b]=this.dom[b+1],this.store&&(this.store[b]=this.store[b+1]);d=this.dom[a]=b,this.store&&(this.store[a]=c)}else c(this.dom,this.store,d,i,a,g)}return this},Mikado.prototype.up=function(b,a){return(!a||0<a)&&this.shift(b,-(a||1)),this},Mikado.prototype.down=function(b,a){return(!a||0<a)&&this.shift(b,a||1),this},Mikado.prototype.first=function(b){return this.shift(b,-this.length)},Mikado.prototype.last=function(b){return this.shift(b,this.length)},Mikado.prototype.before=function(a,b){return"number"!=typeof a&&(a=this.index(a)),"number"!=typeof b&&(b=this.index(b)),b!==a+1&&(0>b&&(b=this.length+b,0>a&&b--),0>a&&(a=this.length+a-1),this.shift(a,b-a-1)),this},Mikado.prototype.after=function(a,b){return"number"!=typeof a&&(a=this.index(a)),"number"!=typeof b&&(b=this.index(b)),b!==a-1&&(0>b&&(b=this.length+b-2,0>a&&b++),0>a&&(a=this.length+a-1),this.shift(a,b-a+1)),this},Mikado.prototype.swap=function(c,d,e){if(c!==d){let a,b;if("number"==typeof c?(a=c,c=this.dom[c]):a=this.index(c),"number"==typeof d?(b=d,d=this.dom[d]):b=this.index(d),this.reuse&&(this.store||this.loose)){const f=this.store?this.store[a]:c._data;this.update(c,this.store?this.store[b]:d._data,e,a),this.update(d,f,e,b)}else{const e=a+1!==b;if(this.root.insertBefore(e?c:d,e?d:c),e&&b+1!==a&&this.root.insertBefore(d,this.dom[a+1]||null),this.dom[a]=d,this.dom[b]=c,this.store&&!this.extern){const c=this.store[b];this.store[b]=this.store[a],this.store[a]=c}}}return this}}